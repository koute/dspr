#!/usr/bin/ruby1.9.1

VARIABLES =
{
    :interleaveness => [ :interleaved, :noninterleaved ],
    :representation => [ :short, :float ],
    :endianness => [ :be, :le ]
}

$state = { }

def recurse( index = 0, indentation = '' )

    if index >= VARIABLES.size

        a = $state[ :input_interleaveness ] == :interleaved
        b = $state[ :output_interleaveness ] == :interleaved
        c = $state[ :input_endianness ] != $state[ :output_endianness ]
        d = $state[ :input_representation ]
        e = $state[ :output_representation ]

        print indentation
        puts "convert_template< #{a}, #{b}, #{c}, #{d}, #{e} >( input, buffer_length(), &output, output_length, output_allocated, channels );"

        return
    end

    key = VARIABLES.keys[ index ]
    possibilities = VARIABLES[ key ]
    last_index = possibilities.size - 1

    input_key = "input_#{key}".to_sym
    output_key = "output_#{key}".to_sym

    possibilities.each_with_index do |input_possibility, input_index|

        print indentation
        if input_index == last_index
            puts 'else'
        else
            if input_index == 0
                print 'if'
            else
                print 'else if'
	    end
		puts "( #{input_key} == format_#{input_possibility} )"
	end

	print indentation
	puts "{"

	$state[ input_key ] = input_possibility

	possibilities.each_with_index do |output_possibility, output_index|

	    indentation2 = indentation + (' ' * 4)

	    print indentation2
	    if output_index == last_index
            puts 'else'
	    else
            if output_index == 0
                print 'if'
            else
                print 'else if'
            end
            puts "( #{output_key} == format_#{output_possibility} )"
	    end

	    $state[ output_key ] = output_possibility

	    print indentation2
	    puts "{"
	    recurse( index + 1, indentation2 + (' ' * 4) )
	    print indentation2
	    puts "}"

	end

	print indentation
	puts "}"

    end

end

puts "// This file was autogenerated by generate-conversion-ifs.rb; DO NOT EDIT"
puts
recurse
